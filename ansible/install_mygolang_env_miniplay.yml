---
## ansible.playbook install_mygolang_env
# miniplaybook to install my base golang env in a centos vm
- hosts: mygolang-server
  user: myremoteuser
  become: yes
  vars:
    go_download_location: "https://dl.google.com/go/"
    go_tarball: "go1.10.linux-amd64.tar.gz"
    go_tarball_checksum: "sha256:b5a64335f1490277b585832d1f6c7f8c6c11206cba5cd3f771dcb87b98ad1a33"
    go_version_target: "go version go1.10 linux/amd64"
    set_go_path: yes
  tasks:
  - name: Install OS packages
    yum:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - git
      - vim
    tags:
      - base-os-install


  - name: Download the Go tarball
    get_url:
      url: "{{ go_download_location }}/{{ go_tarball }}"
      dest: /usr/local/src/{{ go_tarball }}
      checksum: "{{ go_tarball_checksum }}"
    tags:
      - golang-base-install


  - name: Register the current Go version (if any)
    command: /usr/local/go/bin/go version
    ignore_errors: yes
    register: go_version
    changed_when: false
    tags:
      - golang-base-install


  - name: Remove old installation of Go
    file:
      path: /usr/local/go
      state: absent
    when: go_version|failed or go_version.stdout != go_version_target
    tags:
      - golang-base-install


  - name: Extract the Go tarball if Go is not yet installed or not the desired version
    unarchive:
      src: /usr/local/src/{{ go_tarball }}
      dest: /usr/local
      copy: no
    when: go_version|failed or go_version.stdout != go_version_target
    tags:
      - golang-base-install


  - name: Add the Go bin directory to the PATH environment variable for all users
    copy:
      src: go-bin.sh
      dest: /etc/profile.d
    tags:
      - golang-base-install


  - name: Set GOPATH for all users
    copy:
      src: go-path.sh
      dest: /etc/profile.d
    when: set_go_path
    tags:
      - golang-base-install


  - name: Set fact to avoid problems with environments
    set_fact:
    become: no
    go_path: "{{ lookup('env', 'GOPATH') | default(ansible_env.HOME+'/go', true) }}"
    tags:
      - golang-packages-install


  - name: Install packages for testing and coverage
    become: no
    environment:
      GOPATH: "{{ go_path }}"
    shell: go get -u {{ item }}
    with_items:
      - github.com/axw/gocov
      - github.com/t-yuki/gocov-xml
      - github.com/fatih/color
      - github.com/gorilla/mux
      - github.com/gorilla/handlers
      - github.com/spf13/afero
      - github.com/spf13/cobra
      - github.com/spf13/viper
      - github.com/BurntSushi/toml
      - gopkg.in/mgo.v2
      - github.com/schollz/progressbar
      - golang.org/x/crypto/ssh/terminal
      - github.com/stretchr/testify
    tags:
      - golang-packages-install